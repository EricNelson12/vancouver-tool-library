---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'> & {
	href: string;
};

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname;
const subpath = pathname.match(/[^\/]+/g);

// Handle base path for internal links
const basePath = import.meta.env.PUBLIC_BASE_PATH || '';
const finalHref = href.startsWith('/') ? `${basePath}${href}` : href;

// Check if the current path matches the link
const isActive = pathname === (href.startsWith('/') ? `${basePath}${href}` : href) || 
                 href === '/' + (subpath?.[0] || '');
---

<a href={finalHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
