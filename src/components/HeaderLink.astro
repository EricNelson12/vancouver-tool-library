---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'> & {
	href: string;
};

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');

// If the href is a relative path (starts with /), prepend the base URL
const finalHref = href.startsWith('/') ? import.meta.env.BASE_URL + href.slice(1) : href;
---

<a class="text-3xl font-bold underline" href={finalHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
