---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'> & {
	href: string;
};

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname;
const subpath = pathname.match(/[^\/]+/g);

let link = href;
// if href starts with / add the base path to it 
if (link.startsWith('/') && import.meta.env.PUBLIC_BASE_PATH) {
	link = "/" + import.meta.env.PUBLIC_BASE_PATH + link;
}

// Check if the href is in the current path
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={link} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>

<style>
	/* Change the opacity of the link when it is active */
	.active {
		opacity: 0.5;
	}
</style>